apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

// quality checks
apply from: '../buildsystem/quality/quality.gradle'
apply from: '../buildsystem/quality/ktlint.gradle'

android {
    //the compression of webp file during build causes problem with FileDescriptor in ContentProvider.
    aaptOptions {
        noCompress "webp"
    }
    compileSdkVersion rootProject.ext.androidVersions.compileSdkVersion
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "com.costafot.stickers"
        minSdkVersion rootProject.ext.androidVersions.minSdkVersion
        targetSdkVersion rootProject.ext.androidVersions.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".release"
            versionNameSuffix "-release"


        }
        debug {
            minifyEnabled false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }

    flavorDimensions "style"
    productFlavors {
        kotlinized {
            dimension "style"
            applicationIdSuffix ".kotlinized"
            versionNameSuffix "-kotlinized"
            resValue "string", "app_name", "Stickers"
            versionCode 1
            versionName "0.1"
        }
    }

    applicationVariants.all { variant ->
        variant.resValue "string", "content_provider_authority", variant.applicationId + ".stickercontentprovider"
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/ASL2.0'
        exclude 'lib/*/libnative-imagetranscoder.so'
        exclude 'lib/*/libnative-filters.so'
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Basic Google components
    implementation rootProject.ext.dependencies.appCompatX
    implementation rootProject.ext.dependencies.design
    implementation rootProject.ext.dependencies.cardViewX
    implementation rootProject.ext.dependencies.constraintLayoutX
    implementation rootProject.ext.dependencies.recyclerviewX
    implementation rootProject.ext.dependencies.annotation
    implementation rootProject.ext.dependencies.fragmentKtx

    // Lifecycle
    implementation rootProject.ext.dependencies.lifecycle
    implementation rootProject.ext.dependencies.viewmodelKtx

    // General Ktx
    implementation rootProject.ext.dependencies.coreKtx
    implementation rootProject.ext.dependencies.collectionsKtx

    //Navigation
    implementation rootProject.ext.dependencies.navigationFragments
    implementation rootProject.ext.dependencies.navigationUI

    // Coroutines
    implementation rootProject.ext.dependencies.coroutinesCore
    implementation rootProject.ext.dependencies.coroutinesAndroid

    // Dependency Injection
    implementation rootProject.ext.dependencies.dagger
    kapt rootProject.ext.dependencies.daggerCompiler
    implementation rootProject.ext.dependencies.daggerAndroid
    implementation rootProject.ext.dependencies.daggerAndroidSupport
    kapt rootProject.ext.dependencies.daggerProcessor

    // Logging
    implementation rootProject.ext.dependencies.timberLogger

    // UI stuff
    //noinspection GradleDependency
    implementation rootProject.ext.dependencies.toast
    implementation rootProject.ext.dependencies.lovelydialog
    implementation rootProject.ext.dependencies.flashbar
    implementation rootProject.ext.dependencies.shimmer

    // Imaging
    implementation rootProject.ext.dependencies.glide
    kapt rootProject.ext.dependencies.glideCompiler

    // Gif
    implementation rootProject.ext.dependencies.gif

    // Gson
    implementation rootProject.ext.dependencies.gson

    // Animations
    implementation rootProject.ext.dependencies.animations1
    implementation rootProject.ext.dependencies.animations2
    implementation rootProject.ext.dependencies.animations3

    // Otto
    implementation rootProject.ext.dependencies.otto

    // Leak detection
    debugImplementation rootProject.ext.dependencies.leakCanary

    // testing
    testImplementation rootProject.ext.testDependencies.jUnit
    testImplementation rootProject.ext.testDependencies.jUnitKotlin
    implementation rootProject.ext.testDependencies.testCoreX
    testImplementation rootProject.ext.testDependencies.testArchCompX
    testImplementation rootProject.ext.testDependencies.robolectric
    testImplementation rootProject.ext.testDependencies.mockitoCore
    testImplementation rootProject.ext.testDependencies.mockitoKotlin
    testImplementation rootProject.ext.testDependencies.mockitoInline
    testImplementation rootProject.ext.testDependencies.runner
    testImplementation rootProject.ext.testDependencies.espresso
    testImplementation rootProject.ext.testDependencies.espressoIntents
    testImplementation rootProject.ext.testDependencies.rules
    testImplementation rootProject.ext.testDependencies.truth
    testImplementation rootProject.ext.testDependencies.kluent

    androidTestImplementation rootProject.ext.testDependencies.jUnit
    androidTestImplementation rootProject.ext.testDependencies.jUnitKotlin
    androidTestImplementation rootProject.ext.testDependencies.testCoreX
    androidTestImplementation rootProject.ext.testDependencies.runner
    androidTestImplementation rootProject.ext.testDependencies.espresso
    androidTestImplementation rootProject.ext.testDependencies.kakaoUiTesting

    debugImplementation rootProject.ext.testDependencies.fragmentScenario

    implementation 'com.facebook.fresco:fresco:2.0.0'

    // For WebP support, including animated WebP
    implementation 'com.facebook.fresco:animated-webp:2.0.0'
    implementation 'com.facebook.fresco:webpsupport:2.0.0'
    implementation 'com.facebook.fresco:animated-base:2.0.0'

}
